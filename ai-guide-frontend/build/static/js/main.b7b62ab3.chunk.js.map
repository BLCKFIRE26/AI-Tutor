{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","message","setMessage","useState","history","setHistory","sendMessage","async","trim","response","axios","post","role","content","data","React","createElement","className","map","entry","index","key","concat","toLowerCase","type","value","onChange","e","target","onKeyDown","event","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wOA8CeA,MA1Cf,WACE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAASC,GAAcF,mBAAS,IAEjCG,EAAcC,UAClB,IAAKN,EAAQO,OAAQ,OACrB,MAAMC,QAAiBC,IAAMC,KAAK,QAAS,CAAEV,YAC7CI,EAAW,IAAID,EAAS,CAAEQ,KAAM,MAAOC,QAASZ,GAAW,CAAEW,KAAM,KAAMC,QAASJ,EAASK,KAAKb,WAChGC,EAAW,KASb,OACEa,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OAAKC,UAAU,WACZb,EAAQc,IAAI,CAACC,EAAOC,IACnBL,IAAAC,cAAA,OAAKK,IAAKD,EAAOH,UAAS,WAAAK,OAAaH,EAAMP,KAAKW,gBAChDR,IAAAC,cAAA,OAAKC,UAAU,WAAWE,EAAMN,YAItCE,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,SACEQ,KAAK,OACLC,MAAOxB,EACPyB,SAAWC,GAAMzB,EAAWyB,EAAEC,OAAOH,OACrCI,UArBaC,IACH,UAAdA,EAAMT,KACRf,KAoBMyB,YAAY,8BAEdhB,IAAAC,cAAA,UAAQgB,QAAS1B,GAAa,YC3BzB2B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAAChB,EAAG,QAORiC,K","file":"static/js/main.b7b62ab3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Ensure you have this for styling\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [history, setHistory] = useState([]);\n\n  const sendMessage = async () => {\n    if (!message.trim()) return; // Prevent sending empty messages\n    const response = await axios.post('/chat', { message });\n    setHistory([...history, { role: 'You', content: message }, { role: 'AI', content: response.data.message }]);\n    setMessage(''); // Clear the message input after sending\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"chat-box\">\n        <div className=\"history\">\n          {history.map((entry, index) => (\n            <div key={index} className={`message ${entry.role.toLowerCase()}`}>\n              <div className=\"content\">{entry.content}</div>\n            </div>\n          ))}\n        </div>\n        <div className=\"message-input\">\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyDown={handleKeyDown}\n            placeholder=\"Type your message here...\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}